import turtle
import random

def draw_square(x, y):

    turtle.penup()
    turtle.goto(x, y)
    turtle.pendown()

    for _ in range(4):
        turtle.forward(60)
        turtle.right(90)

def draw_grid():

    start_x = -90
    start_y = 90

    for row in range(3):
        for col in range(3):
            draw_square(start_x + col * 60, start_y - row * 60)

def draw_title():

    turtle.penup()
    turtle.goto(0, 130)
    turtle.pendown()
    turtle.write("TIC TAC TOE", align='center', font=('Arial', 24, 'bold'))
    turtle.penup()

def draw_move(row, col, player):

    x = -65 + col * 60 + 10
    y = 65 - row * 60 - 30
    turtle.penup()
    turtle.goto(x, y)
    turtle.pendown()

    if player == 'X':
        turtle.write('X', align='center', font=('Arial', 40, 'normal'))
    else:
        turtle.write('O', align='center', font=('Arial', 40, 'normal'))

def check_winner(board):

    for row in board:
        if row[0] == row[1] == row[2] != " ":
            return row[0]

    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] != " ":
            return board[0][col]

    if board[0][0] == board[1][1] == board[2][2] != " ":
        return board[0][0]

    if board[0][2] == board[1][1] == board[2][0] != " ":
        return board[0][2]

    return None

def is_board_full(board):

    return all(cell != " " for row in board for cell in row)

def ai_move(board):

    empty_cells = [(i, j) for i in range(3) for j in range(3) if board[i][j] == " "]
    return random.choice(empty_cells)

def tic_tac_toe():

    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"
    ai_player = "O"

    draw_title()
    draw_grid()
    while True:
        if current_player == "X":
            # Human move
            move = turtle.textinput("Your Move", "Enter your move (row col):")
            if move:
                try:
                    row, col = map(int, move.split())
                    if board[row][col] == " ":
                        board[row][col] = current_player
                        draw_move(row, col, current_player)
                    else:
                        continue
                except (ValueError, IndexError):
                    continue
            else:
                break
        else:

            row, col = ai_move(board)
            board[row][col] = ai_player
            draw_move(row, col, ai_player)

        winner = check_winner(board)
        if winner:
            turtle.penup()
            turtle.goto(0, -170)
            turtle.pendown()
            turtle.write(f"{winner} wins!", align='center', font=('Arial', 20, 'normal'))
            break

        if is_board_full(board):
            turtle.penup()
            turtle.goto(0, -170)
            turtle.pendown()
            turtle.write("It's a draw!", align='center', font=('Arial', 20, 'normal'))
            break

        current_player = ai_player if current_player == "X" else "X"

    turtle.done()


screen = turtle.Screen()
screen.title("Tic-Tac-Toe Game")
screen.setup(width=300, height=300)


tic_tac_toe()
